# name: test/sql/cudasp.test
# description: test cudasp extension
# group: [sql]

# Require statement will ensure this test is run with this extension loaded
require cudasp

# Test the cudasp_scan table function with small dataset
statement ok
CREATE TABLE test_data(
    txid BLOB,
    height INTEGER,
    tweak_key BLOB,
    outputs BIGINT[]
);

statement ok
INSERT INTO test_data VALUES
    (BLOB '\x00\x01\x02\x03', 100, BLOB '\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43', [12345, 67890]),
    (BLOB '\x10\x11\x12\x13', 101, BLOB '\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83', [11111, 22222]);

# Test basic functionality (CPU placeholder returns matches for value 12345)
query III
SELECT txid, height, tweak_key FROM cudasp_scan((SELECT txid, height, tweak_key, outputs FROM test_data), BLOB '\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf');
----
\x00\x01\x02\x03	100	\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F !\x22#$%&\x27()*+,-./0123456789:;<=>?@ABC

# Test with batching - create 20K rows
statement ok
CREATE TABLE large_test AS
SELECT
    BLOB '\x00\x01\x02\x03' AS txid,
    100 AS height,
    BLOB '\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43' AS tweak_key,
    [12345::BIGINT, 67890::BIGINT] AS outputs
FROM range(20000);

query I
SELECT COUNT(*) FROM cudasp_scan((SELECT txid, height, tweak_key, outputs FROM large_test), BLOB '\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf');
----
20000

# Test with very large dataset for parallel execution (200K rows)
statement ok
CREATE TABLE very_large_test AS
SELECT
    BLOB '\x00\x01\x02\x03' AS txid,
    100 AS height,
    BLOB '\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43' AS tweak_key,
    [12345::BIGINT, 67890::BIGINT] AS outputs
FROM range(200000);

query I
SELECT COUNT(*) FROM cudasp_scan((SELECT txid, height, tweak_key, outputs FROM very_large_test), BLOB '\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf');
----
200000
