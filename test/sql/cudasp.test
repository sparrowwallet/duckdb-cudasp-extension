# name: test/sql/cudasp.test
# description: test cudasp extension
# group: [sql]

# Require statement will ensure this test is run with this extension loaded
require cudasp

# Test with gECC correctness test values (test case 0)
# Scalar s[0] = 0x0278927476e92caa3912937a7f003e45c741ddc47d80d70ae8f35c0c7f3c78fd
# Point x[0]  = 0xef8ef523cd9e1a96dc497886b69cfc28474207c5679252541288869af65ee7f9
# Point y[0]  = 0xf59a57a32f25c0b0963dc44e5a268c1e258a118cfaecda3dadd2394b3e4bacc8
# Expected result: lower 64 bits = 3138950336092156963
statement ok
CREATE TABLE test_data(
    txid BLOB,
    height INTEGER,
    tweak_key BLOB,
    outputs BIGINT[]
);

statement ok
INSERT INTO test_data VALUES
    (BLOB '\x00\x01\x02\x03', 100, BLOB '\xf9\xe7\x5e\xf6\x9a\x86\x88\x12\x54\x52\x92\x67\xc5\x07\x42\x47\x28\xfc\x9c\xb6\x86\x78\x49\xdc\x96\x1a\x9e\xcd\x23\xf5\x8e\xef\xc8\xac\x4b\x3e\x4b\x39\xd2\xad\x3d\xda\xec\xfa\x8c\x11\x8a\x25\x1e\x8c\x26\x5a\x4e\xc4\x3d\x96\xb0\xc0\x25\x2f\xa3\x57\x9a\xf5', [3138950336092156963, 67890]),
    (BLOB '\x10\x11\x12\x13', 101, BLOB '\xe5\x9e\x70\x5c\xb9\x09\xac\xab\xa7\x3c\xef\x8c\x4b\x8e\x77\x5c\xd8\x7c\xc0\x95\x6e\x40\x45\x30\x6d\x7d\xed\x41\x94\x7f\x04\xc6\x2a\xe5\xcf\x50\xa9\x31\x64\x23\xe1\xd0\x66\x32\x65\x32\xf6\xf7\xee\xea\x6c\x46\x19\x84\xc5\xa3\x39\xc3\x3d\xa6\xfe\x68\xe1\x1a', [11111, 22222]),
    (BLOB '\x20\x21\x22\x23', 102, BLOB '\xaa\x5f\x42\x5d\x0a\xd1\x65\x3f\x0f\xd0\x55\xdf\xc1\xa3\x06\x7c\xaf\xc9\xd0\x9b\x06\xce\xa5\xd8\x34\x36\x2a\xa4\x82\x34\xa3\x66\xad\x5b\x78\x71\x2d\x29\x6f\xc3\xa5\xac\xe2\xd8\xb2\x94\x59\x54\xc0\xbc\x34\x59\x59\x37\x89\x63\x04\x62\xcb\xc2\x67\xfc\xd4\x3a', [2824227765776616848, 99999]);

# Should return only the matching row (first one)
query I
SELECT COUNT(*) FROM cudasp_scan((SELECT txid, height, tweak_key, outputs FROM test_data), BLOB '\xfd\x78\x3c\x7f\x0c\x5c\xf3\xe8\x0a\xd7\x80\x7d\xc4\xdd\x41\xc7\x45\x3e\x00\x7f\x7a\x93\x12\x39\xaa\x2c\xe9\x76\x74\x92\x78\x02');
----
1

# Verify it's the correct row
query I
SELECT height FROM cudasp_scan((SELECT txid, height, tweak_key, outputs FROM test_data), BLOB '\xfd\x78\x3c\x7f\x0c\x5c\xf3\xe8\x0a\xd7\x80\x7d\xc4\xdd\x41\xc7\x45\x3e\x00\x7f\x7a\x93\x12\x39\xaa\x2c\xe9\x76\x74\x92\x78\x02');
----
100

# Test with batching - use matching tweak key for all 20K rows
statement ok
CREATE TABLE large_test AS
SELECT
    BLOB '\x00\x01\x02\x03' AS txid,
    100 AS height,
    BLOB '\xf9\xe7\x5e\xf6\x9a\x86\x88\x12\x54\x52\x92\x67\xc5\x07\x42\x47\x28\xfc\x9c\xb6\x86\x78\x49\xdc\x96\x1a\x9e\xcd\x23\xf5\x8e\xef\xc8\xac\x4b\x3e\x4b\x39\xd2\xad\x3d\xda\xec\xfa\x8c\x11\x8a\x25\x1e\x8c\x26\x5a\x4e\xc4\x3d\x96\xb0\xc0\x25\x2f\xa3\x57\x9a\xf5' AS tweak_key,
    [3138950336092156963::BIGINT, 67890::BIGINT] AS outputs
FROM range(20000);

query I
SELECT COUNT(*) FROM cudasp_scan((SELECT txid, height, tweak_key, outputs FROM large_test), BLOB '\xfd\x78\x3c\x7f\x0c\x5c\xf3\xe8\x0a\xd7\x80\x7d\xc4\xdd\x41\xc7\x45\x3e\x00\x7f\x7a\x93\x12\x39\xaa\x2c\xe9\x76\x74\x92\x78\x02');
----
20000

# Test with very large dataset for parallel execution (200K rows)
statement ok
CREATE TABLE very_large_test AS
SELECT
    BLOB '\x00\x01\x02\x03' AS txid,
    100 AS height,
    BLOB '\xf9\xe7\x5e\xf6\x9a\x86\x88\x12\x54\x52\x92\x67\xc5\x07\x42\x47\x28\xfc\x9c\xb6\x86\x78\x49\xdc\x96\x1a\x9e\xcd\x23\xf5\x8e\xef\xc8\xac\x4b\x3e\x4b\x39\xd2\xad\x3d\xda\xec\xfa\x8c\x11\x8a\x25\x1e\x8c\x26\x5a\x4e\xc4\x3d\x96\xb0\xc0\x25\x2f\xa3\x57\x9a\xf5' AS tweak_key,
    [3138950336092156963::BIGINT, 67890::BIGINT] AS outputs
FROM range(200000);

query I
SELECT COUNT(*) FROM cudasp_scan((SELECT txid, height, tweak_key, outputs FROM very_large_test), BLOB '\xfd\x78\x3c\x7f\x0c\x5c\xf3\xe8\x0a\xd7\x80\x7d\xc4\xdd\x41\xc7\x45\x3e\x00\x7f\x7a\x93\x12\x39\xaa\x2c\xe9\x76\x74\x92\x78\x02');
----
200000
